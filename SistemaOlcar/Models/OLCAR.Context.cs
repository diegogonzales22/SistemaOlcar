//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaOlcar.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OLCAREntities : DbContext
    {
        public OLCAREntities()
            : base("name=OLCAREntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MarcaProducto> MarcaProducto { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<Ubicacion> Ubicacion { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<DetalleOrden> DetalleOrden { get; set; }
        public virtual DbSet<OrdenCompra> OrdenCompra { get; set; }
    
        public virtual int usp_UpdateCostoNeto(Nullable<int> idOrden)
        {
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("idOrden", idOrden) :
                new ObjectParameter("idOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateCostoNeto", idOrdenParameter);
        }
    
        public virtual int usp_UpdateCostoTotal(Nullable<int> idOrden)
        {
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("idOrden", idOrden) :
                new ObjectParameter("idOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateCostoTotal", idOrdenParameter);
        }
    
        public virtual int usp_UpdateIGV(Nullable<int> idOrden)
        {
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("idOrden", idOrden) :
                new ObjectParameter("idOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateIGV", idOrdenParameter);
        }
    }
}
